To install the Celery, Redis, Redis-server, RabbitMQ, RabbitMQ-server, flower, beat....

NOTE::: Here core is project name...so use your own project name on the place of core.

pip install celery

pip install redis
sudo apt install redis-server ( # To start the server )

Command Reference
################

# Install celery
    pip install celery

#Install RabbitMQ (Ubuntu Linux 20.04LTS)
    sudo apt-get install rabbitmq-server

# Run Celery
    celery -A NAMEOFINSTANCE worker --loglevel=info

    celery -A core worker --loglevel=info

    [Windows OS]
    celery -A core worker -l info --pool=solo

# Run RabbitMQ (On Windows)

Run:
C:\Program Files\RabbitMQ Server\rabbitmq_server-3.8.6\sbin\rabbitmq-server.bat

#Run First Task
    py manage.py shell
    from task1.tasks import add
    add.delay(2, 2)

    or

    add.apply_async((2, 2), countdown=5)

#Useful commands
    #Show message on completion of task
        logger.info("Sent review email")



###############################
Working with Flower
===============================
# flower may not work in ubuntu .



Windows Work Around
#####
C:\django\yt-django-celery-series-intro-install-run-task\venv\lib\site-packages\tornado\platform\asyncio.py

import sys

if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

Start Flower
#####
flower -A core --port=5555


###############################
django-celery-beat
===============================

celery -A core beat -l INFO  # For deeper logs use DEBUG
celery -A core worker -B -l INFO

You can also embed beat inside the worker by enabling the workers -B option


# To run the task...scheduled from the admin...use the below command
# Database scheduler
celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
###############################